// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function reducer(state, action) {
  if (typeof action !== "object") {
    var newLines = Belt_Array.concat(state.lines, [""]);
    return {
            lines: newLines,
            cursor: state.cursor
          };
  }
  switch (action.TAG) {
    case "UpdateLines" :
        return {
                lines: action._0,
                cursor: state.cursor
              };
    case "UpdateCursor" :
        return {
                lines: state.lines,
                cursor: action._0
              };
    case "InsertNewLine" :
        var position = action._0;
        var before = Belt_Array.slice(state.lines, 0, position);
        var after = Belt_Array.sliceToEnd(state.lines, position);
        var newLines$1 = Belt_Array.concat(Belt_Array.concat(before, [""]), after);
        return {
                lines: newLines$1,
                cursor: state.cursor
              };
    
  }
}

var initialState_lines = [""];

var initialState_cursor = {
  line: 0,
  column: 0
};

var initialState = {
  lines: initialState_lines,
  cursor: initialState_cursor
};

function useEditorState() {
  return React.useReducer(reducer, initialState);
}

function getLineContent(state, lineNumber) {
  return Belt_Option.getWithDefault(Belt_Array.get(state.lines, lineNumber), "");
}

function getLineCount(state) {
  return state.lines.length;
}

export {
  reducer ,
  initialState ,
  useEditorState ,
  getLineContent ,
  getLineCount ,
}
/* react Not a pure module */
